@attribute [Authorize]
@page "/accounts"
@using OpenBankClient.Data.Models
@using OpenBankClient.Data.Services
@using OpenBankClient.Data.Services.Base
@inject AccountsService _accountsService
@inject ILogger<Accounts> _logger
@inject NavigationManager _navigationManager

<h3>Accounts</h3>

@if(accounts != null)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Account Id</th>
                <th scope="col">Balance</th>
                <th scope="col">Date Created</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
        @foreach(Account account in accounts)
        {
            <tr>
                <td scope="row">@account.Id</td>
                <td>@account.Balance  @account.Currency</td>
                <td>@account.CreatedAt.ToString("dd/MM/yy")</td>
                <td><button class="btn btn-outline-dark" @onclick="@(e => GoToAccountDetails(account.Id))">Details</button></td>
            </tr>
        }
        </tbody>
    </table>
}

@code {

    [CascadingParameter]
    public EventCallback SessionStatusEvent { get; set; }

    private List<Account>? accounts;

    protected async override Task OnInitializedAsync()
    {
        var response = await _accountsService.GetAllAccounts();

        if(response.Item3 == "token expired")
        {
            await SessionStatusEvent.InvokeAsync();
            return;
        }
        if (!response.Item1)
            return;
        accounts = (List<Account>)response.Item2!;
        StateHasChanged();
    }
    public void GoToAccountDetails(int accountId)
    {
        _navigationManager.NavigateTo($"/account/{accountId}", true);
    }
}
